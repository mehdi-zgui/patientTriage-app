{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\TRI\\\\patientTriage-app\\\\frontend\\\\src\\\\components\\\\nurse\\\\nurse.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NurseNave from './nurseNav/nurseNave';\nimport NurseContent from './nurseContent/nurseContent';\nimport NurseSide from './nurseSide/nurseSide';\nimport './nurse.css';\nimport { Navigate } from 'react-router-dom';\nimport { getUserFromStorage } from '../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nurse() {\n  _s();\n  const user = getUserFromStorage();\n  const [elm, setElm] = useState('1');\n  if (user == null) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } else if (user.personnel_type !== 'nurse') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${user.personnel_type}`,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  function displayElm(x) {\n    setElm(x);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nu\",\n    children: [/*#__PURE__*/_jsxDEV(NurseNave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sAndC1\",\n      children: [/*#__PURE__*/_jsxDEV(NurseSide, {\n        disp: displayElm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NurseContent, {\n        elm1: elm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Nurse, \"7Kd7bEmQHale3XAShacLuujm71A=\");\n_c = Nurse;\nexport default Nurse;\nvar _c;\n$RefreshReg$(_c, \"Nurse\");","map":{"version":3,"names":["React","useState","NurseNave","NurseContent","NurseSide","Navigate","getUserFromStorage","jsxDEV","_jsxDEV","Nurse","_s","user","elm","setElm","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","personnel_type","displayElm","x","className","children","disp","elm1","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/TRI/patientTriage-app/frontend/src/components/nurse/nurse.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport NurseNave from './nurseNav/nurseNave'\r\nimport NurseContent from './nurseContent/nurseContent'\r\nimport NurseSide from './nurseSide/nurseSide'\r\nimport './nurse.css'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getUserFromStorage } from '../../utils/storage'\r\n\r\nfunction Nurse() {\r\n  const user = getUserFromStorage()\r\n  const [elm, setElm] = useState('1')\r\n\r\n  if (user == null) {\r\n    return <Navigate to=\"/\" replace />;\r\n  } else if (user.personnel_type !== 'nurse') {\r\n    return <Navigate to={`/${user.personnel_type}`} replace />;\r\n  }\r\n\r\n  function displayElm(x) {\r\n    setElm(x)\r\n  }\r\n  return (\r\n    <div className='nu'>\r\n      <NurseNave />\r\n      <div className='sAndC1'>\r\n        <NurseSide disp={displayElm} />\r\n        <NurseContent elm1={elm} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nurse"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,kBAAkB,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,IAAI,GAAGL,kBAAkB,CAAC,CAAC;EACjC,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAEnC,IAAIU,IAAI,IAAI,IAAI,EAAE;IAChB,oBAAOH,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC,CAAC,MAAM,IAAIR,IAAI,CAACS,cAAc,KAAK,OAAO,EAAE;IAC1C,oBAAOZ,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAG,IAAGH,IAAI,CAACS,cAAe,EAAE;MAACL,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5D;EAEA,SAASE,UAAUA,CAACC,CAAC,EAAE;IACrBT,MAAM,CAACS,CAAC,CAAC;EACX;EACA,oBACEd,OAAA;IAAKe,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACjBhB,OAAA,CAACN,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbX,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhB,OAAA,CAACJ,SAAS;QAACqB,IAAI,EAAEJ;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BX,OAAA,CAACL,YAAY;QAACuB,IAAI,EAAEd;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CAtBQD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAwBd,eAAeA,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}